1. add password_hash field in to User model class for further authorization and autentication

2. main.py rename to app.py for have opportunity run flask commands

3. create three cli command for creating, dropping and filling database

4. in config.py defined two separate connection strings for two different db (engine - for SQLite db, engine_postgres - for PostgreSQL)

5. define three template with jinja template engine

6. in to test folder add __init__.py file for transforming folder to module and having opportunity import config.py file in to conftest.py file

7. in app.py file define db uri from config.py file (app.config['SQLALCHEMY_DATABASE_URI'] = config.SQLITE_URL)

8. init application (db.init_app(app)) 

9. create migrate variable to linked app and db (migrate = Migrate(app, db))
   after it in flask command part will appear db command with which we can control migrations

10. in new project we need execute (once) flask db init command

11. flask migrate - create migrations

12. flask upgrade - apply migration

13. migration need to push to git, when we pull project from git we need only make flask db upgrade to have last db version

14. in root directory add forms.py file

15. in forms.py file add LoginForm class

16. in template directory add login template, linked with LoginForm class

17. add login view (function 'login') in app.py file